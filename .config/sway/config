# Sway configuration
# Read `man 5 sway` for a complete reference.

###########
# General #
###########

# Logo key. Use Mod1 for Alt.
# Mod4 = Super
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term tilix

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu dmenu-wl_run -nf '#FFFFFF' -nb '#2E4057' -sb '#DA4167' -sf '#FFFFFF' -fn 'monospace-10' -p 'dmenu prompt &gt;'
set $menu rofi -show drun
set $move_menu rofi -show move
set $rename_menu rofi -lines 0 -show rename
set $workspace_menu rofi -show workspace

# Lockscreen
set $lock '~/.bin/swaylock-blur -f'

# Wallpaper
output * bg ~/Pictures/Wallpapers/arch-retrowave.jpg fill
# Default wallpaper:
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill


# Default output configuration
output eDP-1 {
  scale 2
}


######################
# Idle configuration #
######################

exec swayidle -w \
    timeout 300 $lock \
    timeout 315 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    after-resume 'swaymsg "output * dpms on"' \
    before-sleep $lock


#######################
# Input configuration #
#######################

# Read `man 5 sway-input` for more information about this section.
# - dwt: disable while typing

# Synaptic PS/2
input "2:7:SynPS/2_Synaptics_TouchPad" {
  natural_scroll enabled
  dwt enabled
  tap enabled
}

# Synaptic i²c
input "1739:0:Synaptics_TM3144-002" {
  natural_scroll enabled
  dwt enabled
  tap enabled
}

# Wacom touch screen
# Finger
input "1386:20544:Wacom_Pen_and_multitouch_sensor_Finger"  {
  map_to_output eDP-1
}

# Pen
input "1386:20544:Wacom_Pen_and_multitouch_sensor_Pen"  {
  map_to_output eDP-1
}

# Keyboard options
input "1:1:AT_Translated_Set_2_keyboard" {
  xkb_layout us
  xkb_options shift:both_capslock_cancel,compose:caps
}


################
# Key bindings #
################

# Start terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start launcher
bindsym $mod+d exec $menu

# Other launchers
bindsym $mod+Shift+d exec $workspace_menu
bindsym $mod+m exec $move_menu
bindsym $mod+Shift+r exec $rename_menu

# Mod+Tab workspace switch
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+o workspace back_and_forth

# Lock screen
bindsym $mod+equal exec $lock

# Fix trackpoint drift
bindsym $mod+bracketright exec "/usr/local/bin/fix_clit_drift"

# Turn on all displays for when swayidle fucks up
bindsym --locked $mod+bracketleft exec "~/.bin/swaydpms on"

# Screenshots
bindsym Print+Control_R exec "~/.bin/fullscreen_screenshot.sh clipboard"
bindsym Print+Shift exec "~/.bin/fullscreen_screenshot.sh"
#bindsym Print+Control_R exec "~/.bin/take_screenshot.sh"
bindsym Print+Shift+Control_R exec "~/.bin/take_screenshot.sh clipboard"

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit Sway? This will end your Wayland session.' -b 'Yes, exit Sway' 'swaymsg exit'

# Volume buttons
bindsym --locked XF86AudioRaiseVolume exec ~/.bin/swayvol sink up
bindsym --locked XF86AudioLowerVolume exec ~/.bin/swayvol sink down
bindsym --locked XF86AudioMute exec ~/.bin/swayvol sink mute
bindsym --locked XF86AudioMicMute exec ~/.bin/swayvol source mute

# Brightness
bindsym --locked XF86MonBrightnessUp exec ~/.bin/swaybrightness intel_backlight up
bindsym --locked XF86MonBrightnessDown exec ~/.bin/swaybrightness intel_backlight down

# Toggle follows mouse for bitchy IDEs
bindsym XF86Explorer focus_follows_mouse no
bindsym XF86LaunchA focus_follows_mouse yes

# Enable accelerometer rotation in tablet mode
bindswitch --locked tablet:on exec "~/.bin/sway-accel-rotate"
bindswitch --locked tablet:off exec killall "sway-accel-rotate"


# bindsym XF86AudioPlay exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.quodlibet \
# /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
#
# bindsym XF86AudioNext exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.quodlibet \
# /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
#
# bindsym XF86AudioPrev exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.quodlibet \
# /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

# Focus

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


# Workspaces

# switch to workspace
bindsym $mod+1 workspace 1;  exec ~/.bin/compact-workspaces.py
bindsym $mod+2 workspace 2;  exec ~/.bin/compact-workspaces.py
bindsym $mod+3 workspace 3;  exec ~/.bin/compact-workspaces.py
bindsym $mod+4 workspace 4;  exec ~/.bin/compact-workspaces.py
bindsym $mod+5 workspace 5;  exec ~/.bin/compact-workspaces.py
bindsym $mod+6 workspace 6;  exec ~/.bin/compact-workspaces.py
bindsym $mod+7 workspace 7;  exec ~/.bin/compact-workspaces.py
bindsym $mod+8 workspace 8;  exec ~/.bin/compact-workspaces.py
bindsym $mod+9 workspace 9;  exec ~/.bin/compact-workspaces.py
bindsym $mod+0 workspace 10; exec ~/.bin/compact-workspaces.py

# alternative switch to workspace for ws > 4
bindsym $mod+Alt+1 workspace 5;  exec ~/.bin/compact-workspaces.py
bindsym $mod+Alt+2 workspace 6;  exec ~/.bin/compact-workspaces.py
bindsym $mod+Alt+3 workspace 7;  exec ~/.bin/compact-workspaces.py
bindsym $mod+Alt+4 workspace 8;  exec ~/.bin/compact-workspaces.py

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1; workspace 1;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+2 move container to workspace 2; workspace 2;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+3 move container to workspace 3; workspace 3;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+4 move container to workspace 4; workspace 4;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+5 move container to workspace 5; workspace 5;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+6 move container to workspace 6; workspace 6;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+7 move container to workspace 7; workspace 7;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+8 move container to workspace 8; workspace 8;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+9 move container to workspace 9; workspace 9;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Shift+0 move container to workspace 10; workspace 10; # exec ~/.bin/compact-workspaces.py

# alternative move to workspace for ws > 4
bindsym $mod+Alt+Shift+1 move container to workspace 5; workspace 5;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Alt+Shift+2 move container to workspace 6; workspace 6;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Alt+Shift+3 move container to workspace 7; workspace 7;   # exec ~/.bin/compact-workspaces.py
bindsym $mod+Alt+Shift+4 move container to workspace 8; workspace 8;   # exec ~/.bin/compact-workspaces.py


# Layouts and tiling

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent


# Scratchpad

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


# Resizing containers
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym $mod+r mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# Display configuration apply mode
mode "display" {
    # Help
    bindsym h \
        exec rofi -e "\
= Available display setups =\n\n\
∙ Ⓟ  POuL"


    # 
    #      POuL setup
    #  +------+
    #  | ASUS | +-------+
    #  +------+ |  Oli  |
    #    +----+ |  data |
    #    | TP | +-------+
    #    +----+
    # 

    bindsym p \
        output HDMI-A-1 pos 0 0 mode 1920x1080@60Hz scale 1.13; \
        output eDP-1 pos 419 1072; \
        output HDMI-A-2 pos 1699 415 scale 0.85; \
        mode "default"
        
    # return to default mode
    bindsym XF86Display mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym XF86Display mode "display"


#########
# Style #
#########

font "IBM Plex Mono 10"

# class                 border  bground text    indicator child_border
client.focused          #C16772 #C16772 #FFFFFF #FFA5A5   #FFA5A5
client.focused_inactive #FFA5A5 #FFA5A5 #141021 #484E50   #5F676A
client.unfocused        #141021 #141021 #8a7f8f #292D2E   #222222
client.urgent           #F4D35E #F4D35E #000000 #900000   #900000
client.placeholder      #2E4057 #2E4057 #FFFFFF #000000   #0C0C0C

client.background       #FFFFFF

default_border pixel 3
hide_edge_borders --i3 smart

# Make tray icons context menus go close™ to the bar
for_window [floating app_id="waybar"] move position 700 0

# Make sure JetBrains programs loading screens don't get tiled
# Needs fixed because the IDE also isn't tiled
for_window [title=" " class="jetbrains-.+"] floating enable
for_window [title="Import .+ Settings From .+" class="jetbrains-.+"] floating enable


#############
# Autostart #
#############

# Notifications
exec mako

# Redshift
exec redshift -m wayland
exec redshift-gtk

# GNOME Online Accounts
exec /usr/lib/goa-daemon

# GNOME Keyring and SSH agent
exec gnome-keyring-daemon

# GNOME PolicyKit agent
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# JetBrains Toolbox
exec env QT_QPA_PLATFORM=xcb ~/.local/share/JetBrains/Toolbox/bin/jetbrains-toolbox --minimize

# IBus input daemon
exec ibus-daemon

# NetworkManager applet
exec nm-applet --indicator

# Waybar panel
exec ~/.bin/waybar_wrapper.sh


include /etc/sway/config.d/*
